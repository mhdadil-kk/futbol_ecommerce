<%- include('adheader') %>
<link href="https://unpkg.com/cropperjs/dist/cropper.css" rel="stylesheet" />
<style>
    .cropper-container {
        width: 100%;
        max-height: 400px;
        margin-bottom: 10px;
    }

    .modal-content {
        margin: 10% auto;
        padding: 20px;
        width: 80%;
        max-width: 600px;
        background-color: #363636;
    }

    .image-preview {
        width: 100px;
        height: auto;
        margin-top: 10px;
        position: relative;
        display: inline-block;
        margin-right: 10px;
    }

    .delete-image {
        position: absolute;
        top: 0;
        right: 0;
        background: red;
        color: white;
        border: none;
        border-radius: 50%;
        cursor: pointer;
        font-size: 14px;
        padding: 2px 6px;
        margin: 5px;
    }

    .preview-container {
        display: flex;
        flex-wrap: wrap;
    }
</style>
<script src="https://unpkg.com/cropperjs"></script>

<section class="content-main">
    <div class="row">
        <div class="col-12">
            <div class="content-header text-center">
                <h2 class="content-title">Edit Product</h2>
            </div>
        </div>
        <div class="col-lg-8 mx-auto">
            <div class="card mb-4">
                <div class="card-header text-center">
                    <h4>Basic Information</h4>
                </div>
                <div class="card-body">
                    <form action="/admin/editproduct/<%= product._id %>" method="POST" enctype="multipart/form-data">
                        <input type="hidden" name="_method" value="PUT">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" name="name" value="<%= product.name %>" placeholder="Type here" class="form-control" id="product_name" required />
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Full Description</label>
                            <textarea placeholder="Type here" name="description" class="form-control" rows="4" required><%= product.description %></textarea>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 mb-4">
                                <label class="form-label">Price</label>
                                <input placeholder="â‚¹" name="price" type="number" value="<%= product.price %>" class="form-control" required />
                            </div>
                            <div class="col-lg-6 mb-4">
                                <label class="form-label">Stock</label>
                                <input type="number" name="stock" value="<%= product.stock %>" class="form-control" required />
                            </div>
                        </div>

                        <div class="card mb-4">
                            <div class="card-header text-center">
                                <h4>Organization</h4>
                            </div>
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-12 mb-3">
                                        <label class="form-label">Category</label>
                                        <select name="category" class="form-select" required>
                                            <% if (categories && categories.length > 0) { %>
                                                <% categories.forEach((category) => { %>
                                                    <option value="<%= category._id %>" <%= product.category._id == category._id ? 'selected' : '' %>>
                                                        <%= category.name %>
                                                    </option>
                                                <% }) %>
                                            <% } %>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card mb-4">
                            <div class="card-header text-center">
                                <h4>Media</h4>
                            </div>
                            <div class="card-body">
                                <div class="input-upload text-center">
                                    <div id="imagePreviews" class="preview-container">
                                        <% if (product.images && product.images.length > 0) { %>
                                            <% product.images.forEach((image, index) => { %>
                                                <div class="image-preview">
                                                    <img src="/uploads/<%= image %>" alt="Product Image" />
                                                    <button type="button" class="delete-image" onclick="deleteImage('<%= image %>', <%= index %>)">X</button>
                                                </div>
                                            <% }) %>
                                        <% } %>
                                    </div>
                                    <input name="images" class="form-control mt-3" type="file" id="productImages" accept="image/*" multiple onchange="handleImageUploads(event)" />
                                </div>
                            </div>

                            <div class="text-center">
                                <button type="submit" class="btn btn-primary btn-md rounded font-sm hover-up">Update</button>
                            </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

<%- include('adfooter') %>

<!-- Modal for cropping -->
<div id="cropperModal" class="modal">
    <div class="modal-content">
        <div class="cropper-container">
            <img id="cropperImage" src="" alt="Image for cropping" />
        </div>
        <button onclick="cropImage()">Crop</button>
        <button onclick="closeModal()">Cancel</button>
    </div>
</div>

<script>
    let cropper;
    let currentFileIndex = 0; // To track the current file being processed
    let imageFiles = []; // To store all cropped files

    function handleImageUploads(event) {
        const input = event.target;
        const existingImageCount = document.querySelectorAll('#imagePreviews .image-preview').length;
        if (input.files.length + existingImageCount > 5) {
            alert('You can only upload up to 5 images.');
            return;
        }
        const files = Array.from(input.files); // Convert FileList to Array
        processFilesForCropping(files);
    }

    function processFilesForCropping(files) {
        const reader = new FileReader();

        reader.onload = function (e) {
            const cropperImage = document.getElementById('cropperImage');
            cropperImage.src = e.target.result;
            document.getElementById('cropperModal').style.display = 'block';
            if (cropper) {
                cropper.destroy();
            }
            cropper = new Cropper(cropperImage, {
                aspectRatio: 3 / 4, // Portrait aspect ratio
                viewMode: 1,
            });
        };

        // Process the first file
        reader.readAsDataURL(files[currentFileIndex]);
    }

    function cropImage() {
        if (cropper) {
            cropper.getCroppedCanvas({
                width: 300, // desired width
                height: 400, // desired height
            }).toBlob(function (blob) {
                const croppedImageSrc = URL.createObjectURL(blob);
                const imagePreviewContainer = document.getElementById('imagePreviews');

                // Create and append new preview
                if (imagePreviewContainer.children.length < 5) {
                    const previewDiv = document.createElement('div');
                    previewDiv.classList.add('image-preview');
                    previewDiv.innerHTML = `
                        <img src="${croppedImageSrc}" alt="Product Image" />
                        <button type="button" class="delete-image" onclick="deleteImage('${croppedImageSrc}')">X</button>
                    `;
                    imagePreviewContainer.appendChild(previewDiv);

                    // Convert the blob to a File and add to imageFiles array
                    const file = new File([blob], `croppedImage_${Date.now()}.jpg`, { type: "image/jpeg" });
                    imageFiles.push(file);

                    currentFileIndex++;
                } else {
                    alert('You can only have up to 5 images.');
                }

                closeModal();
            }, 'image/jpeg');
        }
    }

    function closeModal() {
        document.getElementById('cropperModal').style.display = 'none';
        if (cropper) {
            cropper.destroy();
            cropper = null;
        }
    }

    function deleteImage(imagePath) {
        if (confirm('Are you sure you want to delete this image?')) {
            const imageElement = Array.from(document.querySelectorAll('#imagePreviews .image-preview img')).find(img => img.src === imagePath);
            if (imageElement) {
                imageElement.parentElement.remove();
            }
        }
    }

    // Submit form and append the cropped images
    document.querySelector('form').addEventListener('submit', function (event) {
        event.preventDefault(); // Prevent normal form submission

        const formData = new FormData(this); // Create FormData object from the form

        // Append the cropped image files to the form data
        imageFiles.forEach((file, index) => {
            formData.append('croppedImages[]', file);
        });

        // Send form data with AJAX or fetch
        fetch(this.action, {
            method: 'POST',
            body: formData,
        }).then(response => {
            if (response.ok) {
                alert('Product updated successfully!');
                window.location.reload();
            } else {
                alert('Failed to update product.');
            }
        }).catch(error => {
            console.error('Error:', error);
            alert('Failed to update product.');
        });
    });
</script>
